<?xml version="1.0" encoding="UTF-8"?>

<!-- 但修改了本文件时，可以60秒重新载入本xml文件 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">

	<!-- 配置log文件的目录 -->
	<!-- value都配置成/data/logs/[具体业务名称] 例如下面-->
	<property name="LOG_PATH" value="${log.path}" />
	<property name="LOG_CHARSET" value="UTF-8" />

	<!-- 不往console中打log，所以删除了console的appender -->

	<!-- root打到这里 -->
	<appender name="rootAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/demo.log</file>
		<append>true</append>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/demo.log.%d{yyyy-MM-dd}</fileNamePattern>
			<!-- 只保留最近30天的 -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<!-- 日志文件格式 -->
		<encoder>
			<!-- 业务分析log格式，所有业务分析使用的格式，都是这个格式，一般对应的logger都是warn或者error -->
			<pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] %-5level:%msg%n==> %logger.%method\(%file:%L\)[%t]%n</pattern>
			<charset>${LOG_CHARSET}</charset>
		</encoder>
	</appender>
	
	<!-- 每天controller层的数据 -->
	<appender name="mvcLogAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/demo-mvc.log</file>
		<append>true</append>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/demo-mvc.log.%d{yyyy-MM-dd}</fileNamePattern>
			<!-- 只保留最近30天的 -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<!-- 日志文件格式 -->
		<encoder>
			<!-- 业务分析log格式，所有业务分析使用的格式，都是这个格式，一般对应的logger都是warn或者error -->
			<pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] %-5level:%msg%n[%d{yyyy-MM-dd-HH:mm:ss.SSS}]==> %logger.%method\(%file:%L\)[%t]%n</pattern>
			<charset>${LOG_CHARSET}</charset>
		</encoder>
	</appender>

	<!-- 每天controller层的数据 -->
	<appender name="jobLogAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/demo-job.log</file>
		<append>true</append>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/demo-job.log.%d{yyyy-MM-dd}</fileNamePattern>
			<!-- 只保留最近30天的 -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<!-- 日志文件格式 -->
		<encoder>
			<!-- 业务分析log格式，所有业务分析使用的格式，都是这个格式，一般对应的logger都是warn或者error -->
			<pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] %-5level:%msg%n[%d{yyyy-MM-dd-HH:mm:ss.SSS}]==> %logger.%method\(%file:%L\)[%t]%n</pattern>
			<charset>${LOG_CHARSET}</charset>
		</encoder>
	</appender>

	<!-- 本地性能log -->
	<appender name="perf4jLogAppender"
			  class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/performance/perf4j.log</file>
		<rollingPolicy
				class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/performance/perf4j.log.%d{yyyy-MM-dd}
			</fileNamePattern>
			<maxHistory>90</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] %-5level:%msg%n
			</pattern>
			<charset>utf-8</charset>
		</encoder>
	</appender>
	<appender name="CoalescingStatistics"
			  class="org.perf4j.logback.AsyncCoalescingStatisticsAppender">
		<param name="TimeSlice" value="60000" />
		<appender-ref ref="perf4jLogAppender" />
	</appender>

	<logger name="cn.eakay.demo.webfront.controller"
			level="${root.level}" additivity="false">
		<appender-ref ref="mvcLogAppender" />
	</logger>

	<logger name="cn.eakay.demo.biz.jobs"
			level="${root.level}" additivity="false">
		<appender-ref ref="jobLogAppender" />
	</logger>

	<!-- 使用perf4j 不使用自定义的 -->
	<!--<include resource="performance/perf-aspectj-logback.xml"/>-->

	<!-- root -->
	<root level="${root.level}">
		<appender-ref ref="rootAppender" />
	</root>
</configuration>